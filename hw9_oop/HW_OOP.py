–ó–∞–¥–∞–Ω–∏–µ 1 (5 –±–∞–ª–ª–æ–≤)
–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å—ã Chat, Message –∏ User. –û–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:

Chat:

–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∞—Ç—Ä–∏–±—É—Ç chat_history, –≥–¥–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è (Message) –≤ –æ–±—Ä–∞—Ç–Ω–æ–º —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ, –∑–∞—Ç–µ–º —Å—Ç–∞—Ä—ã–µ)
–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ show_last_message, –≤—ã–≤–æ–¥—è—â–∏–π –Ω–∞ —ç–∫—Ä–∞–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ get_history_from_time_period, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (–¥–∞—Ç—ã —Å –∫–æ—Ç–æ—Ä–æ–π –∏ –ø–æ –∫–∞–∫—É—é –º—ã –∏—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—ã–¥–∞—ë–º –∏—Ö). –ú–µ—Ç–æ–¥ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ Chat
–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ show_chat, –≤—ã–≤–æ–¥—è—â–∏–π –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∞–∫–æ–º –∂–µ –≤–∏–¥–µ –∫–∞–∫ –∏ show_last_message, –Ω–æ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º –º–µ–∂–¥—É –Ω–∏–º–∏)
–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ recieve, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –µ–≥–æ –≤ —á–∞—Ç
Message:

–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ç—Ä–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–∞
text - —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
datetime - –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å datetime –≤–∞–º –≤ –ø–æ–º–æ—â—å). –í–∞–∂–Ω–æ! –≠—Ç–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ –¥–∞—Ç–∞ –µ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ —á–∞—Ç!
user - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–¥–µ—Å—å, —Ä–∞–∑–±–µ—Ä—ë—Ç–µ—Å—å —Å–∞–º–∏)
–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ show, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—á–∞—Ç–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (–¥–∞—Ç–∞, –≤—Ä–µ–º—è, —é–∑–µ—Ä, —Ç–µ–∫—Å—Ç)
–î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ send, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
User:

–ö–ª–∞—Å—Å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —é–∑–µ—Ä–µ, –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏–¥—É–º–∞–π—Ç–µ —Å–∞–º–∏
–ù–∞–ø–∏—à–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏.

–í —Ç–µ–∫—Å—Ç–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–º–µ—Ä–µ–Ω–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –∫–∞–∫–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–µ—Ç–æ–¥—ã, –ø—É—Å–∫–∞–π –≤–∞–º –≤ —ç—Ç–æ–º –ø–æ–º–æ–∂–µ—Ç –∑–¥—Ä–∞–≤—ã–π —Å–º—ã—Å–ª)

–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ –Ω–µ —Å—Ç–æ–∏—Ç —Ñ–ª–µ–∫—Å–∏—Ç—å –≤—Å—è–∫–∏–º–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ —à—Ç—É–∫–∞–º–∏, –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ

–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –º–æ–¥—É–ª—å datetime

from datetime import datetime
import time
‚Äã
class Chat:
    def __init__(self):
        self.chat_history = []
        
    def show_last_message(self):
        last_message = self.chat_history[0]
        last_message.show()
    
    def get_history_from_time_period(self, after = datetime(2000, 1, 1, 1, 1, 1),
                                     before = datetime(2099, 1, 1, 1, 1, 1)):
        selected_messages = Chat()
        for message in self.chat_history:
            if message.datetime > after and message.datetime < before:
                selected_messages.recieve(message)
        return selected_messages.show_chat()
    
    def show_chat(self):
        for message in self.chat_history:
            message.show()
    
    def recieve(self, new_message):
        new_message.datetime = datetime.now()
        self.chat_history.insert(0, new_message)
        time.sleep(5) # –°–æ–Ω 5 —Å–µ–∫—É–Ω–¥ —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–∑—è—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤ get_history_from_time_period
        return self.chat_history 
        
class Message:
    def __init__(self, user, message):
        self.text = message
        self.user = user.nickname
        self.pronouns = user.pronouns
        self.datetime = None
    
    def show(self):
        info = f'''
        From: {self.user}
        Message: {self.text}
        Date and time: {self.datetime}'''
        print(info)
    
    def send(self, chat):
        chat.recieve(self)
        
class User:
    def __init__(self, nickname, kaomoji, pronouns):
        self.nickname = kaomoji + nickname + kaomoji
        self.pronouns = pronouns
    def __repr__(self):
        return f'Nickname:{self.nickname}, pronouns: {self.pronouns}.'
dio = User(' Ôº§Ôº©ÔºØ ', 'ü¶á', 'he/him')
jojo = User(' Ôº™ÔΩèÔº™ÔΩè ', '‚≠ê', 'he/him')
‚Äã
m1 = Message(dio, "Oh? You're approaching me? Instead of running away, you're coming right to me?")
m2 = Message(jojo, "I can't beat the shit out of you without getting closer")
m3 = Message(dio, "Oh ho!~ Then come as close as you like")
m4 = Message(jojo, "Yare yare daze...")
m5 = Message(jojo, "Ora!Ora!Ora!Ora!")
m6 = Message(dio, "Too slow, too slow! The World is the ultimate Stand. Even without his power to stop time, his speed and power far exceed that of your Star Platinum.")
‚Äã
battle = Chat()
dio
Nickname:ü¶á Ôº§Ôº©ÔºØ ü¶á, pronouns: he/him.
m2.show()

        From: ‚≠ê Ôº™ÔΩèÔº™ÔΩè ‚≠ê
        Message: I can't beat the shit out of you without getting closer
        Date and time: None
m1.send(battle)
m2.send(battle)
battle.show_chat()

        From: ‚≠ê Ôº™ÔΩèÔº™ÔΩè ‚≠ê
        Message: I can't beat the shit out of you without getting closer
        Date and time: 2023-02-24 14:35:30.753319

        From: ü¶á Ôº§Ôº©ÔºØ ü¶á
        Message: Oh? You're approaching me? Instead of running away, you're coming right to me?
        Date and time: 2023-02-24 14:35:25.751524
m3.send(battle)
m4.send(battle)
m5.send(battle)
m6.send(battle)
m5.send(battle)
battle.show_chat()

        From: ‚≠ê Ôº™ÔΩèÔº™ÔΩè ‚≠ê
        Message: Ora!Ora!Ora!Ora!
        Date and time: 2023-02-24 14:35:55.801231

        From: ü¶á Ôº§Ôº©ÔºØ ü¶á
        Message: Too slow, too slow! The World is the ultimate Stand. Even without his power to stop time, his speed and power far exceed that of your Star Platinum.
        Date and time: 2023-02-24 14:35:50.797180

        From: ‚≠ê Ôº™ÔΩèÔº™ÔΩè ‚≠ê
        Message: Ora!Ora!Ora!Ora!
        Date and time: 2023-02-24 14:35:55.801231

        From: ‚≠ê Ôº™ÔΩèÔº™ÔΩè ‚≠ê
        Message: Yare yare daze...
        Date and time: 2023-02-24 14:35:40.789306

        From: ü¶á Ôº§Ôº©ÔºØ ü¶á
        Message: Oh ho!~ Then come as close as you like
        Date and time: 2023-02-24 14:35:35.784470

        From: ‚≠ê Ôº™ÔΩèÔº™ÔΩè ‚≠ê
        Message: I can't beat the shit out of you without getting closer
        Date and time: 2023-02-24 14:35:30.753319

        From: ü¶á Ôº§Ôº©ÔºØ ü¶á
        Message: Oh? You're approaching me? Instead of running away, you're coming right to me?
        Date and time: 2023-02-24 14:35:25.751524
battle.get_history_from_time_period(after = datetime(2023, 2, 24, 14, 35, 29),
                                    before = datetime(2023, 2, 24, 14, 35, 40))

        From: ‚≠ê Ôº™ÔΩèÔº™ÔΩè ‚≠ê
        Message: I can't beat the shit out of you without getting closer
        Date and time: 2023-02-24 14:36:36.080990

        From: ü¶á Ôº§Ôº©ÔºØ ü¶á
        Message: Oh ho!~ Then come as close as you like
        Date and time: 2023-02-24 14:36:31.078827
‚Äã
–ó–∞–¥–∞–Ω–∏–µ 2 (3 –±–∞–ª–ª–∞)
–í –ø–∏—Ç–æ–Ω–µ –∫–∞–∫-—Ç–æ —Å–ª–∏—à–∫–æ–º —Ç–∏–ø–∏—á–Ω–æ –∏ –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–π. –ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å Args, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –∞ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ–ª—å–∑—è, –¥–∞ –∏ –≤—Ä—è–¥-–ª–∏ —ç—Ç–æ –∫–∞–∫-—Ç–æ –ø–æ–º–æ–∂–µ—Ç)

class Args:
    def __init__(self, *args, **kwargs):
        self.args = args
        self.kwargs = kwargs
    
    def __rlshift__(self, function):
        return function(*self.args, **self.kwargs)
sum << Args([1, 2])
3
(lambda a, b, c: a**2 + b + c) << Args(1, 2, c=50)
53
–ó–∞–¥–∞–Ω–∏–µ 3 (5 –±–∞–ª–ª–æ–≤)
–°–¥–µ–ª–∞–π—Ç–µ –∫–ª–∞—Å—Å –Ω–∞—Å–ª–µ–¥–Ω–∏–∫ float. –û–Ω –¥–æ–ª–∂–µ–Ω –≤–µ—Å—Ç–∏ —Å–µ–±—è –∫–∞–∫ float, –Ω–æ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏:

–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∞ <–¥–µ–π—Å—Ç–≤–∏–µ>_<—á–∏—Å–ª–æ> –º—ã –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–∞–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–¥ –Ω–∞—à–∏–º —á–∏—Å–ª–æ–º
–°–æ–∑–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ, –æ—á–µ–≤–∏–¥–Ω–æ, –Ω–µ —Å—Ç–æ–∏—Ç
–ü–æ–¥—Å–∫–∞–∑–∫–∞: –µ—Å–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≥—É–≥–ª—ë–∂–∫–∏, –≤—ã –≤—ã–π–¥–µ—Ç–µ –Ω–∞ —Ç–∞–∫—É—é —Ç–µ–º—É –∫–∞–∫ "–î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ã", —Ç–æ —ç—Ç–æ –ù–ï —Ç–æ, —á—Ç–æ –≤–∞–º —Å–µ–π—á–∞—Å –Ω—É–∂–Ω–æ

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∏–∂–µ

class StrangeFloat(float):
    def __init__(self, number):
        self.number = number
        super().__init__()
        
    def __getattr__(self, item):
        function, number2 = item.split('_')
        if function == 'add':
            return StrangeFloat(self.number + float(number2))
        if function == 'subtract':
            return StrangeFloat(self.number - float(number2))
        if function == 'multiply':
            return StrangeFloat(self.number * float(number2))
        if function == 'divide':
            return StrangeFloat(self.number / float(number2))
number = StrangeFloat(3.5)
number.add_1
4.5
number.subtract_20
-16.5
number.multiply_5
17.5
number.divide_25
0.14
number.add_1.add_2.multiply_6.divide_8.subtract_9
-4.125
getattr(number, "add_-2.5")   # –ò—Å–ø–æ–ª—å–∑—É–µ–º getattr, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –º–æ–∂–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å number.add_-2.5 - —ç—Ç–æ SyntaxError
1.0
number + 8   # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–ª—è float –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–∞–∫–∂–µ
11.5
number.as_integer_ratio()   # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–ª—è float –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–∞–∫–∂–µ  (—ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ float, –ø–∏—Å–∞—Ç—å –µ–≥–æ –ù–ï –ù–ê–î–û)
(7, 2)
–ó–∞–¥–∞–Ω–∏–µ 4 (3 –±–∞–ª–ª–∞)
–í –¥–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏ –º—ã –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–¥–æ—Ö–Ω—ë–º –∏ –ø–æ–≤–µ—Å–µ–ª–∏–º—Å—è. –û—Ç –≤–∞—Å —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∏—Ç—å –≤ –¥–∞–Ω–Ω–æ–º –∫–æ–¥–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –Ω–∞ –≤—ã–∑–æ–≤—ã dunder –º–µ—Ç–æ–¥–æ–≤, dunder –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∏ dunder –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.

–ú–∞–ª–µ–Ω—å–∫–∞—è –∑–∞–º–µ—Ç–∫–∞: –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—Å—ë –∑–∞–º–µ–Ω–∏—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –ù–∞–ø—Ä–∏–º–µ—Ä, function() –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –∫–∞–∫ function.__call__(), –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –º—ã –≤—Å—ë –µ—â—ë –Ω–µ –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç —Å–∫–æ–±–æ—á–µ–∫, —Ç–∞–∫ —á—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Ç–∞–∫ –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏ function.__call__.__call__.__call__.__call__.....__call__() –∏ –ø—Ä–∏ –≤—Å—ë–º –ø—Ä–∏ —ç—Ç–æ–º –º—ã –µ—â—ë –Ω–µ –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç . –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ç—Ä–∏–±—É—Ç–∞–º. –í –æ–±—â–µ–º, –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å—ë, —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è, –Ω–µ –∑–∞–∫–∞–ø—ã–≤–∞—è—Å—å –≤ –ø–æ–≤—Ç–æ—Ä—ã, –∫–∞–∫ –≤ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ. –ß–µ–º –±–æ–ª—å—à–µ —Ä–∞–∑–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –≤—ã –Ω–∞–π–¥—ë—Ç–µ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ, —Ç–µ–º –ª—É—á—à–µ –∏ —Ç–µ–º –≤—ã—à–µ –±—É–¥–µ—Ç –±–∞–ª–ª

–ö–æ–¥ –ø–æ –∏—Ç–æ–≥—É –¥–æ–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –ø–µ—á–∞—Ç–∞—Ç—å —á–∏—Å–ª–æ 4420.0, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ. –°—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–¥–∞ –º–µ–Ω—è—Ç—å –Ω–µ–ª—å–∑—è, –ø—Ä–æ—Å—Ç–æ –∏–∑–º–µ–Ω—è–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ —Å–∏–Ω–æ–Ω–∏–º–∏—á–Ω—ã–µ

–ò –µ—â—ë –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞. –ó–∞–º–µ–Ω–∏—Ç—å –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—ë –∫—Ä–æ–º–µ:

–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ for ... in ...:
–°–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª—è–º–±–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏
–û–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è =
–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if-else
dir(matrix)
import numpy as np
‚Äã
‚Äã
matrix = list.__call__()
for idx in range(0, 100, 10):
    matrix.__iadd__([list.__call__(range(idx, idx.__add__(10)))])
    
selected_columns_indices = list.__call__(filter(lambda x: x in range(1, 5, 2), range(matrix.__len__())))
selected_columns = map(lambda x: [x.__getitem__(col) for col in selected_columns_indices], matrix)
‚Äã
arr = np.array(list.__call__(selected_columns))
‚Äã
mask = (arr.__getitem__((slice.__call__(None), 1)) % 3).__eq__(0)
new_arr = arr.__getitem__(mask)
‚Äã
product = new_arr.__matmul__(new_arr.T)
‚Äã
if (product.__getitem__(0).__lt__(1000)).all().__and__((product.__getitem__(2).__gt__(1000)).any()):
    print(product.mean())
4420.0
‚Äã
import numpy as np
‚Äã
‚Äã
matrix = []
for idx in range(0, 100, 10):
    matrix += [list(range(idx, idx + 10))]
    
selected_columns_indices = list(filter(lambda x: x in range(1, 5, 2), range(len(matrix))))
selected_columns = map(lambda x: [x[col] for col in selected_columns_indices], matrix)
‚Äã
arr = np.array(list(selected_columns))
‚Äã
mask = arr[:, 1] % 3 == 0
new_arr = arr[mask]
‚Äã
product = new_arr @ new_arr.T
‚Äã
if (product[0] < 1000).all() and (product[2] > 1000).any():
    print(product.mean())
4420.0
–ó–∞–¥–∞–Ω–∏–µ 5 (10 –±–∞–ª–ª–æ–≤)
–ù–∞–ø–∏—à–∏—Ç–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å BiologicalSequence, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–∞—ë—Ç —Å–ª–µ–¥—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:

–†–∞–±–æ—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π len
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏ –¥–µ–ª–∞—Ç—å —Å—Ä–µ–∑—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å—Ç—Ä–æ–∫–∞–º)
–í—ã–≤–æ–¥ –Ω–∞ –ø–µ—á–∞—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –≤–∏–¥–µ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ —Å—Ç—Ä–æ–∫—É
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–ª—Ñ–∞–≤–∏—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å NucleicAcidSequence:

–î–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å BiologicalSequence
–î–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏–º–µ–µ—Ç –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ complement, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –∫–æ–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
–î–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏–º–µ–µ—Ç –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ gc_content, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π GC-—Å–æ—Å—Ç–∞–≤ (–±–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã, –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –∏–ª–∏ –≤ –¥–æ–ª—è—Ö)
–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å—ã –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∏ NucleicAcidSequence: DNASequence –∏ RNASequence

DNASequence –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–µ—Ç–æ–¥ transcribe, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–Ω—É—é –†–ù–ö-–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
–î–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –ø—É–±–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ complement –∏ –º–µ—Ç–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–ª—Ñ–∞–≤–∏—Ç–∞, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —É–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –≤ NucleicAcidSequence.
–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å AminoAcidSequence:

–î–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å BiologicalSequence
–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–º—É –∫–ª–∞—Å—Å—É –æ–¥–∏–Ω –ª—é–±–æ–π –º–µ—Ç–æ–¥, –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–æ —Å–º—ã—Å–ª—É –∫ –∞–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∏–∑–æ—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–π —Ç–æ—á–∫–∏, –º–æ–ª–µ–∫—É–ª—è—Ä–Ω–æ–≥–æ –≤–µ—Å–∞ –∏ —Ç.–¥.
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –ø–æ–≤–æ–¥—É –º–µ—Ç–æ–¥–∞ NucleicAcidSequence.complement, —Ç–∞–∫ –∫–∞–∫ —è —Ö–æ—á—É, —á—Ç–æ–±—ã –≤—ã —Å–¥–µ–ª–∞–ª–∏ –µ–≥–æ –æ–ø—Ä–µ–¥–µ–¥—ë–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º:

–ü—Ä–∏ –≤—ã–∑–æ–≤–µ dna.complement() –∏–ª–∏ —É—Å–ª–æ–≤–Ω–æ–≥–æ dna.check_alphabet() –¥–æ–ª–∂–Ω—ã –±—É–¥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã –∏–∑ NucleicAcidSequence. –ü—Ä–∏ —ç—Ç–æ–º, –¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ–º –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞, –∏–Ω–∞—á–µ –≥–æ–≤–æ—Ä—è, –≤–Ω—É—Ç—Ä–∏ complement –Ω–µ –Ω–∞–¥–æ –¥–µ–ª–∞—Ç—å —É—Å–ª–æ–≤–∏—è –∞-–ª—è if seuqence_type == "DNA": return self.complement_dna(), —ç—Ç–æ –∫—Ä–∞–π–Ω–µ –Ω–µ –≥–∏–±–∫–æ. –î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –æ–ø–∏—Ä–∞—Ç—å—Å—è –Ω–∞ –∫–∞–∫–æ–π-—Ç–æ –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–µ–∂–¥—É –î–ù–ö –∏ –†–ù–ö. –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ NucleicAcidSequence –Ω–µ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É –∫–æ–¥ NucleicAcidSequence("ATGC").complement() –Ω–µ –æ–±—è–∑–∞–Ω —Ä–∞–±–æ—Ç–∞—Ç—å, –∞ –≤ –∏–¥–µ–∞–ª–µ –¥–æ–ª–∂–µ–Ω –∫–∏–¥–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ NotImplementedError –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –æ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ NucleicAcidSequence

–í—Å—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞–Ω–∏—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∫–æ–¥. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥ –≤ —Å–µ—Å—Ç—Ä–∏–Ω—Å–∫–∏—Ö –∫–ª–∞—Å—Å–∞—Ö –∏–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –∏ –¥–æ—á–µ—Ä–Ω–µ–º, –∑–Ω–∞—á–∏—Ç –≤—ã —á—Ç–æ-—Ç–æ –¥–µ–ª–∞–µ—Ç–µ –Ω–µ —Ç–∞–∫.

–ú–∞–ª–µ–Ω—å–∫–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ: –ü–æ-—Ö–æ—Ä–æ—à–µ–º—É, –º–µ–∂–¥—É –∫–ª–∞—Å—Å–æ–º BiologicalSequence –∏ –∫–ª–∞—Å—Å–∞–º–∏ NucleicAcidSequence –∏ AminoAcidSequence, –µ—â—ë –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–ª–∞—Å—Å-–ø—Ä–æ—Å–ª–æ–π–∫–∞, —á–∞—Å—Ç–∏—á–Ω–æ —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å BiologicalSequence, –Ω–æ –µ–≥–æ –ø–∏—Å–∞—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∑–∞–¥–∞–Ω–∏–µ –∏ —Ç–∞–∫ –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–æ–µ (–ø—Ä–∞–≤–¥–∞ –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ —É –≤–∞—Å –Ω–µ–º–∏–Ω—É–µ–º–æ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥ –≤ –∫–ª–∞—Å—Å–∞—Ö NucleicAcidSequence –∏ AminoAcidSequence)

from abc import ABC, abstractmethod
‚Äã
class BiologicalSequence(ABC):
    @abstractmethod
    def __len__(self):
        pass
    
    @abstractmethod
    def __str__(self):
        pass
    
    @abstractmethod
    def __getitem__(self, item):
        pass
    
    @abstractmethod
    def alphabet_check(self):
        pass
    
class NucleicAcidSequence(BiologicalSequence):
    def __init__(self, sequence):
        self.sequence = sequence
        self.allowed = None 
        self.complement_dict = None
        
    def __len__(self):
        return len(self.sequence)
    
    def __str__(self):
        return str(self.sequence)
    
    def __getitem__(self, slc):
        return self.sequence[slc]
    
    def alphabet_check(self):
        if self.allowed == None:
            raise NotImplementedError
        else:
            alphabet = set(self.sequence)
            if alphabet.issubset(self.allowed):
                return 'Good alphabet'
            else:
                raise ValueError('Wrong alphabet')
        
    def complement(self):
        if self.complement == None:
            raise NotImplementedError
        else:
            self.complemented = []
            for letter in self.sequence:
                self.complemented.append(self.complement_dict[letter])
        return ''.join(self.complemented)
            
    
class DNASequence(NucleicAcidSequence):
    def __init__(self, sequence):
        super().__init__(sequence)
        self.allowed = {'A', 'T', 'G', 'C'}
        self.complement_dict = {'A':'T', 'T':'A',
                                'G':'C', 'C':'G'}
    
    def transcribe(self):
        return self.sequence.replace('T', 'U')
‚Äã
‚Äã
class RNASequence(NucleicAcidSequence):
    def __init__(self, sequence):
        super.__init__(sequence)
        self.allowed = {'A', 'C', 'G', 'U'}
        self.complement_dict = {'A':'U', 'U':'A',
                                'G':'C', 'C':'G'}
        
class AminoAcidSequence(BiologicalSequence):
    def __init__(self, sequence):
        self.sequence = sequence
        self.allowed = {'A', 'R', 'N', 'D',
                        'C', 'Q', 'E', 'G',
                        'H', 'I', 'L', 'K',
                        'M', 'F', 'P', 'S',
                        'T', 'W', 'Y', 'V'}
‚Äã
        self.composition = {'A': 0, 'R': 0, 'N': 0, 'D': 0,
                            'C': 0, 'Q': 0, 'E': 0, 'G': 0,
                            'H': 0, 'I': 0, 'L': 0, 'K': 0,
                            'M': 0, 'F': 0, 'P': 0, 'S': 0,
                            'T': 0, 'W': 0, 'Y': 0, 'V': 0}
    def __len__(self):
        return len(self.sequence)
    
    def __str__(self):
        return str(self.sequence)
    
    def __getitem__(self, slc):
        return self.sequence[slc]
    
    def alphabet_check(self):
        alphabet = set(self.sequence)
        if alphabet.issubset(self.allowed):
            return 'Good alphabet'
        else:
            raise ValueError('Wrong alphabet')
    
    def count_composition(self):
        for am_acid in self.sequence:
            self.composition[am_acid] += 1
        for am_acid in self.composition:
            self.composition[am_acid] =  round(self.composition[am_acid] * 100 / len(self.sequence), 2)
‚Äã
        return self.composition
    
    
# –ù–µ —Å–¥–µ–ª–∞–ª–∞ –∫–ª–∞—Å—Å-–ø—Ä–æ—Å–ª–æ–π–∫—É –∏ –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –∞–º —Å–æ—Ä—Ä–∏, —è —É—Å—Ç–∞–ª( –æ—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ –¥–∞–ª–æ—Å—å –æ—Å–æ–∑–Ω–∞—Ç—å –¥–∞–∂–µ —ç—Ç–æ –≤—Å–µ
seq_fna = DNASequence('ATGCTGTGTCTCTCA')
seq_fna2 = NucleicAcidSequence('ATGCTGTGTCTCTCA')
seq_fna.alphabet_check()
'Good alphabet'
seq_fna.transcribe()
'AUGCUGUGUCUCUCA'
seq_fna2.alphabet_check()
---------------------------------------------------------------------------
NotImplementedError                       Traceback (most recent call last)
Cell In[68], line 1
----> 1 seq_fna2.alphabet_check()

Cell In[64], line 18, in NucleicAcidSequence.alphabet_check(self)
     16 def alphabet_check(self):
     17     if self.allowed == None:
---> 18         raise NotImplementedError
     19     else:
     20         alphabet = set(self.sequence)

NotImplementedError: 
seq_faa = AminoAcidSequence('MGDEDVAALVVDNGSGMCKAGFAGDDAPRAV')
seq_faa.alphabet_check()
'Good alphabet'
seq_faa.count_composition()
{'A': 19.35,
 'R': 3.23,
 'N': 3.23,
 'D': 16.13,
 'C': 3.23,
 'Q': 0.0,
 'E': 3.23,
 'G': 16.13,
 'H': 0.0,
 'I': 0.0,
 'L': 3.23,
 'K': 3.23,
 'M': 6.45,
 'F': 3.23,
 'P': 3.23,
 'S': 3.23,
 'T': 0.0,
 'W': 0.0,
 'Y': 0.0,
 'V': 12.9}
‚Äã
‚Äã
‚Äã

